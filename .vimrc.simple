set nocompatible            " Ditch strict vi compatibility

" Clear existing autocommands
autocmd!
set backspace=indent,eol,start    " More powerful backspacing

set autoindent              " always set autoindenting on
set autowrite               " Autosave before commands like :next and :make
set textwidth=0             " Don't wrap words by default
set showcmd                 " Show (partial) command in status line.
set encoding=utf-8          " This being the 21st century, I use Unicode
set fileencoding=utf-8

set showmatch               " Show matching brackets.
set ignorecase              " Case insensitive matching
set smartcase               " Case sensitive matching if caps in search string
set hlsearch                " Highlight search matches
set incsearch               " Incremental search

set wildmenu                " Use BASH style completion
set wildmode=list:longest

set complete=.,w,b,u,t,],s{*.pm}
" Suffixes that get lower priority when doing tab completion for filenames.
" These are files we are not likely to want to edit or read.
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc

set nobackup                " Don't keep a backup file
set history=5000            " Keep 5000 lines of command line history
set viminfo='20,\"50        " Read/write a .viminfo file, don't store more than
                            " 50 lines of registers

" Visual stuff
set showcmd                 " Show information about ranges in the ruler
set laststatus=2
set ruler                   " Show the cursor position all the time
set title                   " Show title in title bar
"set cursorline             " Highlight the current line

" Make tabs be spaces instead
set expandtab
set softtabstop=4
set tabstop=4
set shiftwidth=4

" Python folks like two spaces :-/
autocmd FileType python set tabstop=2|set shiftwidth=2
" make requires real tabs
autocmd FileType make set noexpandtab shiftwidth=8

" Make function keys work within screen
if !has("gui_running")
    set term=xterm-256color
endif

" Turn off the button bar in gvim
set guioptions-=T
set guioptions-=m
" No scrollbars
set guioptions-=r
set guioptions-=l
set guioptions-=R
set guioptions-=L
set guifont=monospace\ 8
set mousehide

" Statusline
set statusline=%f           "tail of the filename
set statusline+=[%{strlen(&fenc)?&fenc:'none'}, "file encoding
set statusline+=%{&ff}]     "file format
set statusline+=%h          "help file flag
set statusline+=%m          "modified flag
set statusline+=%r          "read only flag
set statusline+=%y          "filetype
" Warn if there are mixed tabs & spaces or if expandtab is wrong
"set statusline+=%#error#
set statusline+=%*
set statusline+=%=      "left/right separator
set statusline+=%c,     "cursor column
set statusline+=%l/%L   "cursor line/total lines
set statusline+=\ %P    "percent through file

syntax on
"set background=dark
"colors koehler
"colors murphy
"colors torte
"colors elflord
"colors ron
"colors default

filetype plugin indent on
" Extra filetypes
au BufNewFile,BufRead *.jst set filetype=javascript
au BufNewFile,BufRead *.t set filetype=perl
" For Perl programming, have things in braces indenting themselves:
autocmd FileType perl set smartindent
autocmd FileType perl set keywordprg=perldoc\ -f
" Keep comments indented
inoremap # #
" For C-like programming, cindent is the way to go
autocmd FileType c,cpp,slang set cindent
" Check for file changes (svn ci, etc.) periodically and on window & buffer
" switches
"autocmd CursorHold * checktime
autocmd WinEnter * checktime
autocmd BufWinEnter * checktime

"jump to last cursor position when opening a file
"dont do it when writing a commit log entry
"http://structurallysoundtreehouse.com/my-almost-perfect-vim-files
"http://github.com/fredlee/mydotfiles/tree/master
autocmd BufReadPost * call SetCursorPosition()
function! SetCursorPosition()
  if &filetype !~ 'commit\c' && &filetype !~ 'svn\c'
    if line("'\"") > 0 && line("'\"") <= line("$")
     exe "normal g`\""
    endif
  end
endfunction

" Omni Completion
autocmd FileType html :set omnifunc=htmlcomplete#CompleteTags
autocmd FileType python set omnifunc=pythoncomplete#Complete
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
autocmd FileType php set omnifunc=phpcomplete#CompletePHP
autocmd FileType c set omnifunc=ccomplete#Complete

""" Correct misspellings
"abbreviate foo foobar

" Global leader key for shortcuts
let mapleader='\'

" Toggle line numbers
nmap <silent> <F3> :set invnumber<CR>

" Use jj to exit insert mode
imap jj <Esc>

" backtick goes to the exact mark location, single-quote just the line; swap 'em
nnoremap ' `
nnoremap ` '

" have Y behave analogously to D and C rather than to dd and cc (which is
" already done by yy):
noremap Y y$

" Switch amongst splits
map , <C-w><C-w>

" Move around windows with ctrl key!
map <C-H> <C-W>h
map <C-J> <C-W>j
map <C-K> <C-W>k
map <C-L> <C-W>l

" Switch tabs easily
nmap <Tab> gt
nmap <S-Tab> gT
